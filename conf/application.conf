# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="%APPLICATION_SECRET%"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

# VerticaDB
db.default.driver=com.vertica.jdbc.Driver
db.default.url="jdbc:vertica://<db-server-ip-addr>:5433/VMart"
db.default.user=dbadmin
db.default.password=""
db.default.schema="public"
db.default.jndiName=DefaultDS

# TweetAnalyst
tweet.analyst.tags="$HPQ" #can be multiples, just use comma.
tweet.analyst.langs="en" #like twitter api, can be multiples, just use comma.

# JPA
jpa.default=defaultPersistenceUnit

# Redis
redis.host="<redis-server-ip-addr>"
redis.processing.queue="tweets-processing-queue"
redis.persist.queue="tweets-persist-queue"
redis.tweets.channel="live-tweets-channel"


# Hibernate
logger.org.hibernate=INFO
logger.org.hibernate.type=INFO

# Twitter 4J OAuth
twitter.oauth.consumerKey=""
twitter.oauth.consumerSecret=""
twitter.oauth.accessToken=""
twitter.oauth.accessTokenSecret=""

# HP IDOL Platform
hp.idol.analyze.sentiment.uri="https://api.idolondemand.com/1/api/sync/analyzesentiment/v1?text=%TWEET%&language=%LANG%&apikey=YOUR_KEY_HERE"

#Tweet Analyst Actor System
tweet.harvester.on=false // turned off by default cause we already have 10K+ tweets in the db.
tweet.receiver.on=true // turned on by default cause we want to receive tweets from stream API.

# Spring
play.spring.component-scan=true
spring.context.location="application-context.xml"

# Akka
akka.default-dispatcher.core-pool-size-max=64
akka.debug.receive=on

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG




